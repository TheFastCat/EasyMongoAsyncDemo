<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:WpfToolkit="clr-namespace:Microsoft.Windows.Controls;assembly=WpfToolkit"
	xmlns:Primitives="clr-namespace:Microsoft.Windows.Controls.Primitives;assembly=WPFToolkit">



  <!--
	**************************
	* STYLE: Common Brushes
	**************************
	-->
  <LinearGradientBrush x:Key="ControlBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
	<GradientStop Color="#4F4F4F" Offset="1"/>
	<GradientStop Color="#292929" Offset="0"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="HeaderGradientBrush" EndPoint="0.5,1" StartPoint="0.5,0">
	<GradientStop Color="#8f8f8f" Offset="0"/>
	<GradientStop Color="#515151" Offset="1"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="LightGrayGradientBrush" EndPoint="0.5,1" StartPoint="0.5,0">
	<GradientStop Color="#ccc" Offset="0"/>
	<GradientStop Color="#aaa" Offset="1"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="BlueGradientBrush" EndPoint="0.5,1" StartPoint="0.5,0">
	<GradientStop Color="#4075AB" Offset="0"/>
	<GradientStop Color="#66A3D6" Offset="1"/>
  </LinearGradientBrush>


  <LinearGradientBrush x:Key="ControlPointFill" EndPoint="0.5,1" StartPoint="0.5,0">
	<GradientStop Color="#A0EAFFFF" Offset="0"/>
	<GradientStop Color="#A0BFE2E7" Offset="0.50"/>
	<GradientStop Color="#A0D6F1F3" Offset="0.51"/>
	<GradientStop Color="#A0F9FFFF" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ControlPointBorder" Color="#A0000000" />


  <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#101010"/>
  <SolidColorBrush x:Key="TextBrush" Color="#efefef"/>
  <SolidColorBrush x:Key="ControlBorderBrush" Color="#777" />
  <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#666" />
  <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
  <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
  <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

  <SolidColorBrush x:Key="MenuBorder" Color="#777"/>

  <SolidColorBrush x:Key="OnscreenMenuBorder" Color="#99FFFFFF"/>
  <LinearGradientBrush x:Key="OnscreenMenuBackground" EndPoint="0.5,1" StartPoint="0.5,0">
	<GradientStop Color="#B0333333" Offset="0"/>
	<GradientStop Color="#B0222222" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="OnscreenMenuCloseButtonBackground" Color="#77222222"/>
  <SolidColorBrush x:Key="OnscreenMenuCloseButtonForeground" Color="#FFFFFFFF"/>

  <SolidColorBrush x:Key="MenuItemBackground" Color="#E6444444"/>
  <SolidColorBrush x:Key="MenuItemBorder" Color="#E6FFFFFF"/>
  <SolidColorBrush x:Key="MenuItemDisabled" Color="#E6888888"/>
  <SolidColorBrush x:Key="MenuHighlightBackground" Color="#E6666666"/>
  <SolidColorBrush x:Key="MenuHighlightBorder" Color="#E6FFFFFF"/>
  <SolidColorBrush x:Key="CheckBackground" Color="#666"/>
  <SolidColorBrush x:Key="CheckBorder" Color="White"/>
  <SolidColorBrush x:Key="MenuItemArrow" Color="White"/>

  <SolidColorBrush x:Key="PostItYellowBackgrond">
	<SolidColorBrush.Color>
	  <Color A="127" R="255" G="243" B="205" />
	</SolidColorBrush.Color>
  </SolidColorBrush>
  <SolidColorBrush x:Key="PostItYellowBorder">
	<SolidColorBrush.Color>
	  <Color A="127" R="229" G="195" B="101" />
	</SolidColorBrush.Color>
  </SolidColorBrush>

  <!--
	*** THE BACKGROUND GRID DISPLAYED BEHIND THE MAP AND TAB CONTROLS ***
	-->
  <SolidColorBrush x:Key="BlackBrush" Color="Black"/>
  <SolidColorBrush x:Key="WhiteBrush" Color="White"/>
  <DrawingBrush x:Key="GridBackgroundBrush" TileMode="Tile" Viewport="0, 0, 30, 30" ViewportUnits="Absolute">
	<DrawingBrush.Drawing>
	  <DrawingGroup>
		<GeometryDrawing Geometry="M0,0 L20,0 20,20 0,20z" Brush="#222"/>
		<GeometryDrawing Geometry="M0,20 L0,0 20,0">
		  <GeometryDrawing.Pen>
			<Pen Brush="#666" Thickness="0.1"/>
		  </GeometryDrawing.Pen>
		</GeometryDrawing>
	  </DrawingGroup>
	</DrawingBrush.Drawing>
  </DrawingBrush>





  <!--
	**************************
	* STYLE: TextBox
	**************************
	-->

  <Style TargetType="{x:Type TextBox}">
	<Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
	<Setter Property="Background" Value="#33000000"/>
	<Setter Property="Margin" Value="0,1"/>
	<Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
  </Style>




  <!--
	**************************
	* STYLE: TextBlock
	**************************
	-->
  <Style TargetType="{x:Type TextBlock}">
	<Setter Property="Background" Value="Transparent"/>
	<Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
  </Style>





  <!--
	**************************
	* STYLE: MenuItem
	**************************
	-->
  <!-- SimpleStyles: Menu -->
  <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
	<Setter Property="OverridesDefaultStyle" Value="True"/>
	<Setter Property="SnapsToDevicePixels" Value="True"/>
	<Setter Property="Foreground" Value="White"/>
	<Setter Property="FontSize" Value="12"/>
	<Setter Property="Foreground" Value="White"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type Menu}">
		  <Border SnapsToDevicePixels="True"
				  Background="{StaticResource ControlBackgroundBrush}"
				  BorderBrush="{StaticResource MenuBorder}"
				  CornerRadius="6,6,0,0"
				  BorderThickness="1,1,1,0">
			<StackPanel Margin="8,4" ClipToBounds="True" IsItemsHost="True" Orientation="Horizontal" VerticalAlignment="Center"/>
		  </Border>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>

  <!-- SimpleStyles: ContextMenu -->
  <Style TargetType="{x:Type ContextMenu}">
	<Setter Property="SnapsToDevicePixels" Value="True"/>
	<Setter Property="OverridesDefaultStyle" Value="True"/>
	<Setter Property="Grid.IsSharedSizeScope" Value="true"/>
	<Setter Property="HasDropShadow" Value="True"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type ContextMenu}">
		  <Border
			 Name="Border"
			 Background="#DD333333"
			 BorderBrush="#888888"
			 BorderThickness="1">
			<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
		  </Border>
		  <ControlTemplate.Triggers>
			<Trigger Property="HasDropShadow" Value="true">
			  <Setter TargetName="Border" Property="Padding" Value="0,3,0,3"/>
			  <Setter TargetName="Border" Property="CornerRadius" Value="4"/>
			</Trigger>
		  </ControlTemplate.Triggers>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>

  <!-- SimpleStyles: MenuItem -->
  <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
	<Setter Property="Height" Value="1"/>
	<Setter Property="Margin" Value="0,2,0,2"/>
	<Setter Property="SnapsToDevicePixels" Value="True"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type Separator}">
		  <Border BorderBrush="White" BorderThickness="1"/>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>
  <!-- TopLevelHeader -->
  <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
	<Border Name="Border" BorderThickness="1">
	  <Grid>
		<ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True"/>
		<Popup
		   Name="Popup"
		   AllowsTransparency="True"
		   Focusable="False"
		   IsOpen="{TemplateBinding IsSubmenuOpen}"
		   Placement="Bottom"
		   HorizontalOffset="-1"
		   PopupAnimation="Fade">
		  <Border
			 Name="SubmenuBorder"
			 Background="{StaticResource MenuItemBackground}"
			 BorderBrush="{StaticResource MenuItemBorder}"
			 BorderThickness="1"
			 SnapsToDevicePixels="False">
			<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
		  </Border>
		</Popup>
	  </Grid>
	</Border>
	<ControlTemplate.Triggers>
	  <Trigger Property="IsSuspendingPopupAnimation" Value="true">
		<Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
	  </Trigger>
	  <Trigger Property="IsHighlighted" Value="true">
		<Setter TargetName="Border" Property="Background" Value="{StaticResource MenuHighlightBackground}"/>
		<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MenuHighlightBorder}"/>
		<Setter TargetName="Border" Property="BorderThickness" Value="1"/>
	  </Trigger>
	  <Trigger Property="Popup.AllowsTransparency" SourceName="Popup" Value="True">
		<Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,6,6"/>
		<Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3"/>
	  </Trigger>
	  <Trigger Property="IsEnabled" Value="False">
		<Setter Property="Foreground" Value="{StaticResource MenuItemDisabled}"/>
	  </Trigger>
	</ControlTemplate.Triggers>
  </ControlTemplate>
  <!-- TopLevelItem -->
  <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
	<Border Name="Border">
	  <Grid>
		<ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True"/>
	  </Grid>
	</Border>
	<ControlTemplate.Triggers>
	  <Trigger Property="IsHighlighted" Value="true">
		<Setter TargetName="Border" Property="Background" Value="{StaticResource MenuHighlightBackground}"/>
		<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MenuHighlightBorder}"/>
	  </Trigger>
	  <Trigger Property="IsEnabled" Value="False">
		<Setter Property="Foreground" Value="#888888"/>
	  </Trigger>
	</ControlTemplate.Triggers>
  </ControlTemplate>
  <!-- SubmenuItem -->
  <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
	<Border Name="Border" BorderThickness="1" Margin="4,2,4,2">
	  <Grid>
		<Grid.ColumnDefinitions>
		  <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
		  <ColumnDefinition Width="*"/>
		  <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
		  <ColumnDefinition Width="13"/>
		</Grid.ColumnDefinitions>
		<ContentPresenter
			Name="Icon"
			Margin="6,0,6,0"
			Width="16"
			Height="16"
			VerticalAlignment="Center"
			ContentSource="Icon"/>
		<Border
		   Name="Check"
		   Width="13"
		   Height="13"
		   Margin="6,0,6,0"
		   Background="{StaticResource CheckBackground}"
		   BorderBrush="{StaticResource CheckBorder}"
		   BorderThickness="1"
		   Visibility="Collapsed">
		  <Path
			 Name="CheckMark"
			 Width="7"
			 Height="7"
			 Data="M 0 0 L 7 7 M 0 7 L 7 0"
			 SnapsToDevicePixels="False"
			 Stroke="#404040"
			 StrokeThickness="2"
			 Visibility="Hidden"/>
		</Border>
		<ContentPresenter
		   Name="HeaderHost"
		   Grid.Column="1"
		   ContentSource="Header"
		   RecognizesAccessKey="True"/>
		<TextBlock
		   x:Name="InputGestureText"
		   Grid.Column="2"
		   Margin="5,2,0,2"
		   DockPanel.Dock="Right"
		   Text="{TemplateBinding InputGestureText}"/>
	  </Grid>
	</Border>
	<ControlTemplate.Triggers>
	  <Trigger Property="Icon" Value="{x:Null}">
		<Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
	  </Trigger>
	  <Trigger Property="IsChecked" Value="true">
		<Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
	  </Trigger>
	  <Trigger Property="IsCheckable" Value="true">
		<Setter TargetName="Check" Property="Visibility" Value="Visible"/>
		<Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
	  </Trigger>
	  <Trigger Property="IsHighlighted" Value="true">
		<Setter TargetName="Border" Property="Background" Value="{StaticResource MenuHighlightBackground}"/>
		<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MenuHighlightBorder}"/>
		<Setter TargetName="Border" Property="BorderThickness" Value="1"/>
	  </Trigger>
	  <Trigger Property="IsEnabled" Value="false">
		<Setter Property="Foreground" Value="#888888"/>
	  </Trigger>
	</ControlTemplate.Triggers>
  </ControlTemplate>
  <!-- SubmenuHeader -->
  <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
	<Border Name="Border">
	  <Grid>
		<Grid.ColumnDefinitions>
		  <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
		  <ColumnDefinition Width="*"/>
		  <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
		  <ColumnDefinition Width="13"/>
		</Grid.ColumnDefinitions>
		<ContentPresenter
		   Name="Icon"
		   Margin="6,0,6,0"
		   Width="16"
		   Height="16"
		   VerticalAlignment="Center"
		   ContentSource="Icon"/>
		<ContentPresenter
		   Name="HeaderHost"
		   Grid.Column="1"
		   ContentSource="Header"
		   RecognizesAccessKey="True"/>
		<TextBlock
		   x:Name="InputGestureText"
		   Grid.Column="2"
		   Margin="5,2,2,2"
		   DockPanel.Dock="Right"
		   Text="{TemplateBinding InputGestureText}"/>
		<Path
		   Grid.Column="3"
		   HorizontalAlignment="Center"
		   VerticalAlignment="Center"
		   Data="M 0 0 L 0 7 L 4 3.5 Z"
		   Fill="{StaticResource MenuItemArrow}"/>
		<Popup
		   Name="Popup"
		   AllowsTransparency="True"
		   Focusable="False"
		   HorizontalOffset="-5"
		   IsOpen="{TemplateBinding IsSubmenuOpen}"
		   Placement="Right"
		   PopupAnimation="Fade">
		  <Border
			 Name="SubmenuBorder"
			 Background="{StaticResource MenuItemBackground}"
			 BorderBrush="{StaticResource MenuItemBorder}"
			 BorderThickness="1"
			 SnapsToDevicePixels="True">
			<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
		  </Border>
		</Popup>
	  </Grid>
	</Border>
	<ControlTemplate.Triggers>
	  <Trigger Property="Icon" Value="{x:Null}">
		<Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
	  </Trigger>
	  <Trigger Property="IsHighlighted" Value="true">
		<Setter TargetName="Border" Property="Background" Value="{StaticResource MenuHighlightBackground}"/>
	  </Trigger>
	  <Trigger Property="Popup.AllowsTransparency" SourceName="Popup" Value="True">
		<Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4"/>
		<Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
	  </Trigger>
	  <Trigger Property="IsEnabled" Value="false">
		<Setter Property="Foreground" Value="{StaticResource MenuItemDisabled}"/>
	  </Trigger>
	</ControlTemplate.Triggers>
  </ControlTemplate>
  <!-- MenuItem Style -->
  <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
	<Setter Property="OverridesDefaultStyle" Value="True"/>
	<Style.Triggers>
	  <Trigger Property="Role" Value="TopLevelHeader">
		<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
		<Setter Property="Grid.IsSharedSizeScope" Value="true"/>
	  </Trigger>
	  <Trigger Property="Role" Value="TopLevelItem">
		<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
	  </Trigger>
	  <Trigger Property="Role" Value="SubmenuHeader">
		<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
	  </Trigger>
	  <Trigger Property="Role" Value="SubmenuItem">
		<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
	  </Trigger>
	</Style.Triggers>
  </Style>


  <LinearGradientBrush x:Key="TabControlSelectedBrush" StartPoint="0,1" EndPoint="0,0">
	<GradientStop Color="#e6888888" Offset="1"/>
	<GradientStop Color="#e6555555" Offset="0"/>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="TabControlBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
	<GradientStop Color="#4F4F4F" Offset="1"/>
	<GradientStop Color="#292929" Offset="0"/>
  </LinearGradientBrush>


  <!--
	**************************
	* STYLE: TabControl
	**************************
	-->
  <Style TargetType="{x:Type TabItem}">
	<Setter Property="SnapsToDevicePixels" Value="True"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type TabItem}">
		  <Grid Margin="0,3,-12,0">
			<Border Name="Border" Width="100" Height="21">
			  <Border.Background>
				<VisualBrush>
				  <VisualBrush.Visual>
					<Path Name="BorderPath" Stroke="{StaticResource ControlBorderBrush}" Fill="{StaticResource TabControlBackgroundBrush}">
					  <Path.Data>
						<PathGeometry>
						  <PathFigure StartPoint="0,21">
							<LineSegment Point="0,3"/>
							<QuadraticBezierSegment Point1="2,1" Point2="3,0"/>
							<LineSegment Point="84,0"/>
							<QuadraticBezierSegment Point1="86,1" Point2="87,3"/>
							<LineSegment Point="95,18"/>
							<QuadraticBezierSegment Point1="96,20.5" Point2="100,21"/>
							<LineSegment Point="0,21"/>
						  </PathFigure>
						</PathGeometry>
					  </Path.Data>
					</Path>
				  </VisualBrush.Visual>
				</VisualBrush>
			  </Border.Background>
			  <ContentPresenter x:Name="ContentSite"
				  VerticalAlignment="Center"
				  HorizontalAlignment="Left"
				  ContentSource="Header"
				  Margin="10,0,10,2"
				  TextBlock.Foreground="{StaticResource TextBrush}"
				  RecognizesAccessKey="True"/>
			</Border>
		  </Grid>
		  <ControlTemplate.Triggers>
			<Trigger Property="IsSelected" Value="True">
			  <Setter Property="Panel.ZIndex" Value="100" />
			  <Setter TargetName="BorderPath" Property="Path.Fill" Value="{StaticResource TabControlSelectedBrush}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
			  <Setter TargetName="BorderPath" Property="Fill" Value="{StaticResource DisabledBackgroundBrush}" />
			  <Setter TargetName="BorderPath" Property="Stroke" Value="{StaticResource DisabledBorderBrush}" />
			  <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
			</Trigger>
		  </ControlTemplate.Triggers>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>

  <Style TargetType="{x:Type TabControl}">
	<Setter Property="OverridesDefaultStyle" Value="True" />
	<Setter Property="SnapsToDevicePixels" Value="True" />
	<Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type TabControl}">
		  <Grid KeyboardNavigation.TabNavigation="Local">
			<Grid.RowDefinitions>
			  <RowDefinition Height="Auto"/>
			  <RowDefinition Height="*"/>
			</Grid.RowDefinitions>
			<TabPanel
				Name="HeaderPanel"
				Grid.Row="0"
				Panel.ZIndex="1"
				Margin="0,0,0,-1"
				IsItemsHost="True"
				KeyboardNavigation.TabIndex="1"
				Background="Transparent" />
			<Border
				Name="Border"
				Grid.Row="1"
				Background="{StaticResource TabControlBackgroundBrush}"
				BorderBrush="{StaticResource ControlBorderBrush}"
				BorderThickness="1"
				CornerRadius="0,4,4,4"
				KeyboardNavigation.TabNavigation="Local"
				KeyboardNavigation.DirectionalNavigation="Contained"
				KeyboardNavigation.TabIndex="2" >
			  <ContentPresenter
				  Name="PART_SelectedContentHost"
				  Margin="4"
				  ContentSource="SelectedContent"
				  TextBlock.Foreground="{StaticResource TextBrush}"/>
			</Border>
		  </Grid>
		  <ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
			  <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
			  <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
			</Trigger>
		  </ControlTemplate.Triggers>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>
  <Style TargetType="{x:Type StatusBar}">
	<Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
  </Style>





  <!--
	**************************
	* STYLE: ScrollBar
	**************************
	-->
  <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
	<Setter Property="SnapsToDevicePixels" Value="True"/>
	<Setter Property="OverridesDefaultStyle" Value="true"/>
	<Setter Property="Focusable" Value="false"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type RepeatButton}">
		  <Border
Name="Border"
Margin="1"
CornerRadius="2"
Background="#C0C0C0"
BorderBrush="#404040"
BorderThickness="1">
			<Path
HorizontalAlignment="Center"
VerticalAlignment="Center"
Fill="#404040"
Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
		  </Border>
		  <ControlTemplate.Triggers>
			<Trigger Property="IsPressed" Value="true">
			  <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
			  <Setter Property="Foreground" Value="#888888"/>
			</Trigger>
		  </ControlTemplate.Triggers>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>

  <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
	<Setter Property="SnapsToDevicePixels" Value="True"/>
	<Setter Property="OverridesDefaultStyle" Value="true"/>
	<Setter Property="IsTabStop" Value="false"/>
	<Setter Property="Focusable" Value="false"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type RepeatButton}">
		  <Border Background="Transparent" />
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>

  <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
	<Setter Property="SnapsToDevicePixels" Value="True"/>
	<Setter Property="OverridesDefaultStyle" Value="true"/>
	<Setter Property="IsTabStop" Value="false"/>
	<Setter Property="Focusable" Value="false"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type Thumb}">
		  <Border
CornerRadius="2"
Background="{TemplateBinding Background}"
BorderBrush="{TemplateBinding BorderBrush}"
BorderThickness="1" />
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>

  <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
	<Grid >
	  <Grid.RowDefinitions>
		<RowDefinition MaxHeight="18"/>
		<RowDefinition Height="0.00001*"/>
		<RowDefinition MaxHeight="18"/>
	  </Grid.RowDefinitions>
	  <Border
Grid.RowSpan="3"
CornerRadius="2"
Background="#F0F0F0" />
	  <RepeatButton
Grid.Row="0"
Style="{StaticResource ScrollBarLineButton}"
Height="18"
Command="ScrollBar.LineUpCommand"
Content="M 0 4 L 8 4 L 4 0 Z" />
	  <Track
Name="PART_Track"
Grid.Row="1"
IsDirectionReversed="true">
		<Track.DecreaseRepeatButton>
		  <RepeatButton
Style="{StaticResource ScrollBarPageButton}"
Command="ScrollBar.PageUpCommand" />
		</Track.DecreaseRepeatButton>
		<Track.Thumb>
		  <Thumb
Style="{StaticResource ScrollBarThumb}"
Margin="1,0,1,0"
Background="#C0C0C0"
BorderBrush="#404040" />
		</Track.Thumb>
		<Track.IncreaseRepeatButton>
		  <RepeatButton
Style="{StaticResource ScrollBarPageButton}"
Command="ScrollBar.PageDownCommand" />
		</Track.IncreaseRepeatButton>
	  </Track>
	  <RepeatButton
Grid.Row="3"
Style="{StaticResource ScrollBarLineButton}"
Height="18"
Command="ScrollBar.LineDownCommand"
Content="M 0 0 L 4 4 L 8 0 Z"/>
	</Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
	<Grid >
	  <Grid.ColumnDefinitions>
		<ColumnDefinition MaxWidth="18"/>
		<ColumnDefinition Width="0.00001*"/>
		<ColumnDefinition MaxWidth="18"/>
	  </Grid.ColumnDefinitions>
	  <Border
Grid.ColumnSpan="3"
CornerRadius="2"
Background="#F0F0F0" />
	  <RepeatButton
Grid.Column="0"
Style="{StaticResource ScrollBarLineButton}"
Width="18"
Command="ScrollBar.LineLeftCommand"
Content="M 4 0 L 4 8 L 0 4 Z" />
	  <Track
Name="PART_Track"
Grid.Column="1"
IsDirectionReversed="False">
		<Track.DecreaseRepeatButton>
		  <RepeatButton
Style="{StaticResource ScrollBarPageButton}"
Command="ScrollBar.PageLeftCommand" />
		</Track.DecreaseRepeatButton>
		<Track.Thumb>
		  <Thumb
Style="{StaticResource ScrollBarThumb}"
Margin="0,1,0,1"
Background="#C0C0C0"
BorderBrush="#404040" />
		</Track.Thumb>
		<Track.IncreaseRepeatButton>
		  <RepeatButton
Style="{StaticResource ScrollBarPageButton}"
Command="ScrollBar.PageRightCommand" />
		</Track.IncreaseRepeatButton>
	  </Track>
	  <RepeatButton
Grid.Column="3"
Style="{StaticResource ScrollBarLineButton}"
Width="18"
Command="ScrollBar.LineRightCommand"
Content="M 0 0 L 4 4 L 0 8 Z"/>
	</Grid>
  </ControlTemplate>

  <Style TargetType="{x:Type ScrollBar}">
	<Setter Property="SnapsToDevicePixels" Value="True"/>
	<Setter Property="OverridesDefaultStyle" Value="true"/>
	<Style.Triggers>
	  <Trigger Property="Orientation" Value="Horizontal">
		<Setter Property="Width" Value="Auto"/>
		<Setter Property="Height" Value="18" />
		<Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
	  </Trigger>
	  <Trigger Property="Orientation" Value="Vertical">
		<Setter Property="Width" Value="18"/>
		<Setter Property="Height" Value="Auto" />
		<Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
	  </Trigger>
	</Style.Triggers>
  </Style>





  <!--
	**************************
	* STYLE: ToolBar
	**************************
	-->
  <Style TargetType="{x:Type ToolBarTray}">
	<Setter Property="SnapsToDevicePixels" Value="true"/>
	<Setter Property="OverridesDefaultStyle" Value="true"/>
	<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
  </Style>

  <Style x:Key="ToolBarButtonBaseStyle" TargetType="{x:Type ButtonBase}">
	<Setter Property="SnapsToDevicePixels" Value="true"/>
	<Setter Property="OverridesDefaultStyle" Value="true"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type ButtonBase}">
		  <Border
			x:Name="Border"
			BorderThickness="1"
			Background="Transparent"
			BorderBrush="Transparent">
			<ContentPresenter
				Margin="2"
				HorizontalAlignment="Center"
				VerticalAlignment="Center"
				RecognizesAccessKey="True"/>
		  </Border>
		  <ControlTemplate.Triggers>
			<Trigger Property="IsKeyboardFocused" Value="true">
			  <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuHighlightBackground}" />
			  <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MenuHighlightBorder}" />
			</Trigger>
			<Trigger Property="IsMouseOver" Value="true">
			  <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuHighlightBackground}" />
			  <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MenuHighlightBorder}" />
			</Trigger>
			<Trigger Property="IsPressed" Value="true">
			  <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
			  <Setter TargetName="Border" Property="BorderBrush" Value="#606060" />
			</Trigger>
			<Trigger Property="CheckBox.IsChecked" Value="true">
			  <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
			  <Setter TargetName="Border" Property="BorderBrush" Value="#606060" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
			  <Setter Property="Opacity" Value="0.2"/>
			</Trigger>
		  </ControlTemplate.Triggers>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>

  <Style x:Key="{x:Static ToolBar.ButtonStyleKey}"
	 BasedOn="{StaticResource ToolBarButtonBaseStyle}"
	 TargetType="{x:Type Button}"/>
  <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}"
	 BasedOn="{StaticResource ToolBarButtonBaseStyle}"
	 TargetType="{x:Type ToggleButton}"/>
  <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}"
	 BasedOn="{StaticResource ToolBarButtonBaseStyle}"
	 TargetType="{x:Type CheckBox}"/>
  <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
	 BasedOn="{StaticResource ToolBarButtonBaseStyle}"
	 TargetType="{x:Type RadioButton}"/>

  <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}">
	<Setter Property="SnapsToDevicePixels" Value="True"/>
	<Setter Property="OverridesDefaultStyle" Value="True"/>
	<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
	<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
	<Setter Property="AllowDrop" Value="true"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type TextBox}">
		  <Border
			Name="Border"
			Padding="2"
			Background="#FFFFFF"
			BorderBrush="#888888"
			BorderThickness="1" >
			<ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
		  </Border>
		  <ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
			  <Setter TargetName="Border" Property="Background" Value="#EEEEEE"/>
			  <Setter TargetName="Border" Property="BorderBrush" Value="#EEEEEE"/>
			  <Setter Property="Foreground" Value="#888888"/>
			</Trigger>
		  </ControlTemplate.Triggers>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>

  <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
	<Setter Property="OverridesDefaultStyle" Value="true"/>
	<Setter Property="Cursor" Value="SizeAll"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type Thumb}">
		  <Border Background="Transparent"
			SnapsToDevicePixels="True">
			<Rectangle Margin="0,2">
			  <Rectangle.Fill>
				<DrawingBrush Viewport="0,0,4,4"
					ViewportUnits="Absolute"
					Viewbox="0,0,8,8"
					ViewboxUnits="Absolute"
					TileMode="Tile">
				  <DrawingBrush.Drawing>
					<DrawingGroup>
					  <DrawingGroup.Children>
						<GeometryDrawing Brush="#AAA"
							Geometry="M 4 4 L 4 8 L 8 8 L 8 4 z"/>
					  </DrawingGroup.Children>
					</DrawingGroup>
				  </DrawingBrush.Drawing>
				</DrawingBrush>
			  </Rectangle.Fill>
			</Rectangle>
		  </Border>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>

  <Style x:Key="ToolBarOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
	<Setter Property="OverridesDefaultStyle" Value="true"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type ToggleButton}">
		  <Border Name="Bd"
			CornerRadius="0,3,3,0"
			Background="Transparent"
			SnapsToDevicePixels="true">
			<Grid>
			  <Path Name="Arrow"
				Fill="Black"
				VerticalAlignment="Bottom"
				Margin="2,3"
				Data="M -0.5 3 L 5.5 3 L 2.5 6 Z"/>
			  <ContentPresenter/>
			</Grid>
		  </Border>
		  <ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
			  <Setter TargetName="Bd" Property="Background" Value="#808080"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocused" Value="true">
			  <Setter TargetName="Bd" Property="Background" Value="#808080"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="true">
			  <Setter TargetName="Bd" Property="Background" Value="#808080"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
			  <Setter TargetName="Arrow" Property="Fill" Value="#AAA"/>
			</Trigger>
		  </ControlTemplate.Triggers>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>

  <Style TargetType="{x:Type ToolBar}">
	<Setter Property="SnapsToDevicePixels" Value="true"/>
	<Setter Property="OverridesDefaultStyle" Value="true"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type ToolBar}">
		  <Border x:Name="Border"
			CornerRadius="2"
			BorderThickness="1"
			Margin="0,0,2,0"
			Background="{StaticResource ControlBackgroundBrush}"
			BorderBrush="{StaticResource MenuBorder}">
			<DockPanel >
			  <ToggleButton DockPanel.Dock="Right"
				IsEnabled="{TemplateBinding HasOverflowItems}"
				Style="{StaticResource ToolBarOverflowButtonStyle}"
				IsChecked="{Binding Path=IsOverflowOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
				ClickMode="Press">
				<Popup x:Name="OverflowPopup"
					AllowsTransparency="true"
					Placement="Bottom"
					IsOpen="{Binding Path=IsOverflowOpen,RelativeSource={RelativeSource TemplatedParent}}"
					StaysOpen="false"
					Focusable="false"
					PopupAnimation="Slide">
				  <Border x:Name="DropDownBorder"
					Background="#FFFFFF"
					BorderThickness="1"
					BorderBrush="#888888">
					<ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
						Margin="2"
						WrapWidth="200"
						Focusable="true"
						FocusVisualStyle="{x:Null}"
						KeyboardNavigation.TabNavigation="Cycle"
						KeyboardNavigation.DirectionalNavigation="Cycle"/>
				  </Border>
				</Popup>
			  </ToggleButton>
			  <Thumb x:Name="ToolBarThumb"
				Style="{StaticResource ToolBarThumbStyle}"
				Width="10"/>
			  <ToolBarPanel x:Name="PART_ToolBarPanel"
				IsItemsHost="true"
				Margin="1,1,2,2"/>
			</DockPanel>
		  </Border>
		  <ControlTemplate.Triggers>
			<Trigger Property="IsOverflowOpen" Value="true">
			  <Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="false"/>
			</Trigger>
			<Trigger Property="ToolBarTray.IsLocked" Value="true">
			  <Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed"/>
			</Trigger>
		  </ControlTemplate.Triggers>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>





  <!--
	**************************
	* STYLE: Label
	**************************
	-->
  <Style TargetType="{x:Type Label}">
	<Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
	<Setter Property="Background" Value="Transparent"/>
	<Setter Property="Margin" Value="2"/>
	<Setter Property="Padding" Value="2"/>
	<Setter Property="HorizontalAlignment" Value="Right"/>
	<Setter Property="VerticalAlignment" Value="Center"/>
  </Style>

  <Style x:Key="GroupBoxHeader" TargetType="{x:Type Label}">
	<Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
	<Setter Property="Background" Value="Transparent"/>
	<Setter Property="FontSize" Value="14"/>
	<Setter Property="FontWeight" Value="Bold"/>
	<Setter Property="FontFamily" Value="Arial"/>
	<Setter Property="Margin" Value="0"/>
	<Setter Property="Padding" Value="4,0"/>
	<Setter Property="VerticalAlignment" Value="Center"/>
  </Style>

  <Style x:Key="ObjectPropertiesHeader" TargetType="{x:Type Label}">
	<Setter Property="Foreground" Value="#222"/>
	<Setter Property="Background" Value="Transparent"/>
	<Setter Property="FontSize" Value="12"/>
	<Setter Property="FontWeight" Value="Bold"/>
	<Setter Property="FontFamily" Value="Arial"/>
	<Setter Property="Margin" Value="0"/>
	<Setter Property="Padding" Value="4,0"/>
  </Style>




  <!--
	**************************
	* STYLE: Image
	**************************
	-->
  <Style TargetType="{x:Type Image}">
	<Setter Property="RenderOptions.BitmapScalingMode" Value="Fant"/>
  </Style>
  <Style x:Key="TooltipIcon" TargetType="{x:Type Image}">
	<Setter Property="RenderOptions.BitmapScalingMode" Value="Fant"/>
	<Setter Property="Height" Value="32"/>
	<Setter Property="Margin" Value="2,2,4,2"/>
  </Style>
  <Style x:Key="ToolbarIcon" TargetType="{x:Type Image}">
	<Setter Property="RenderOptions.BitmapScalingMode" Value="Fant"/>
	<Setter Property="Width" Value="22"/>
	<Setter Property="Height" Value="22"/>
	<Setter Property="Margin" Value="0"/>
  </Style>
  <Style x:Key="ReportDetailIcon" TargetType="{x:Type Image}">
	<Setter Property="RenderOptions.BitmapScalingMode" Value="Fant"/>
	<Setter Property="Width" Value="12"/>
	<Setter Property="Height" Value="12"/>
	<Setter Property="Margin" Value="2,0,4,0"/>
  </Style>
  <Style x:Key="PanelIcon" TargetType="{x:Type Image}">
	<Setter Property="RenderOptions.BitmapScalingMode" Value="Fant"/>
	<Setter Property="Width" Value="20"/>
	<Setter Property="Height" Value="20"/>
	<Setter Property="Margin" Value="4,2"/>
  </Style>
  <Style x:Key="GroupBoxHeaderIcon" TargetType="{x:Type Image}">
	<Setter Property="RenderOptions.BitmapScalingMode" Value="Fant"/>
	<Setter Property="Width" Value="20"/>
	<Setter Property="Height" Value="20"/>
	<Setter Property="Margin" Value="4,2"/>
	<Setter Property="VerticalAlignment" Value="Center"/>
  </Style>



  <!--
	**************************
	* STYLE: GroupBox
	**************************
	-->
  <Style TargetType="{x:Type GroupBox}">
	<Setter Property="Margin" Value="8"/>
	<Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
	<Setter Property="Background" Value="#33000000"/>
	<Setter Property="Border.BorderThickness" Value="0.2"/>
  </Style>
  <Style x:Key="PlainButton" TargetType="{x:Type Button}">
	<Setter Property="Background" Value="Transparent"/>
	<Setter Property="BorderThickness" Value="0"/>
	<Setter Property="SnapsToDevicePixels" Value="True"/>
  </Style>





  <!--
	**************************
	* STYLE: GlowButton
	**************************
	-->
  <Style TargetType="{x:Type Button}">
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type Button}">
		  <Border BorderBrush="#7f666666" BorderThickness="1,1,1,1" CornerRadius="5,5,5,5" Margin="2">
			<Border x:Name="border" Background="#7F000000" BorderBrush="#FF000000" BorderThickness="1" CornerRadius="4,4,4,4">
			  <Grid>
				<Grid.RowDefinitions>
				  <RowDefinition Height="0.507*"/>
				  <RowDefinition Height="0.493*"/>
				</Grid.RowDefinitions>
				<Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="4,4,4,4">
				  <Border.Background>
					<RadialGradientBrush>
					  <RadialGradientBrush.RelativeTransform>
						<TransformGroup>
						  <ScaleTransform ScaleX="1.702" ScaleY="2.243"/>
						  <TranslateTransform X="-0.368" Y="-0.152"/>
						</TransformGroup>
					  </RadialGradientBrush.RelativeTransform>
					  <GradientStop Color="#B28DBDFF" Offset="0"/>
					  <GradientStop Color="#008DBDFF" Offset="1"/>
					</RadialGradientBrush>
				  </Border.Background>
				</Border>
				<ContentPresenter Margin="5,1" TextBlock.Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto" Grid.RowSpan="2"/>
				<Border HorizontalAlignment="Stretch" Margin="0,0,0,0" x:Name="shine" Width="Auto" CornerRadius="4,4,0,0">
				  <Border.Background>
					<LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
					  <GradientStop Color="#66FFFFFF" Offset="0"/>
					  <GradientStop Color="#11FFFFFF" Offset="1"/>
					</LinearGradientBrush>
				  </Border.Background>
				</Border>
			  </Grid>
			</Border>
		  </Border>
		  <ControlTemplate.Resources>
			<Storyboard x:Key="Timeline1">
			  <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
				<SplineDoubleKeyFrame KeyTime="00:00:00.0500000" Value="1"/>
			  </DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard x:Key="Timeline2">
			  <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
				<SplineDoubleKeyFrame KeyTime="00:00:00.0500000" Value="0"/>
			  </DoubleAnimationUsingKeyFrames>
			</Storyboard>
		  </ControlTemplate.Resources>
		  <ControlTemplate.Triggers>
			<Trigger Property="IsPressed" Value="True">
			  <Setter Property="Opacity" TargetName="shine" Value="0.4"/>
			  <Setter Property="Background" TargetName="border" Value="#CC000000"/>
			  <Setter Property="Visibility" TargetName="glow" Value="Hidden"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
			  <Trigger.EnterActions>
				<BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
			  </Trigger.EnterActions>
			  <Trigger.ExitActions>
				<BeginStoryboard x:Name="Timeline2_BeginStoryboard" Storyboard="{StaticResource Timeline2}"/>
			  </Trigger.ExitActions>
			</Trigger>
		  </ControlTemplate.Triggers>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>


  <Style TargetType="{x:Type Button}" x:Key="FindButton">
	<Setter Property="Margin" Value="3,4,3,0"/>
	<Setter Property="Width" Value="54"/>
	<Setter Property="Height" Value="48"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type Button}">
		  <Border BorderBrush="#7f666666" BorderThickness="1,1,1,1" CornerRadius="5,5,5,5" Margin="2">
			<Border x:Name="border" Background="#7F000000" BorderBrush="#FF000000" BorderThickness="1" CornerRadius="4,4,4,4">
			  <Grid>
				<Grid.RowDefinitions>
				  <RowDefinition Height="0.507*"/>
				  <RowDefinition Height="0.493*"/>
				</Grid.RowDefinitions>
				<Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="4,4,4,4">
				  <Border.Background>
					<RadialGradientBrush>
					  <RadialGradientBrush.RelativeTransform>
						<TransformGroup>
						  <ScaleTransform ScaleX="1.702" ScaleY="2.243"/>
						  <TranslateTransform X="-0.368" Y="-0.152"/>
						</TransformGroup>
					  </RadialGradientBrush.RelativeTransform>
					  <GradientStop Color="#B28DBDFF" Offset="0"/>
					  <GradientStop Color="#008DBDFF" Offset="1"/>
					</RadialGradientBrush>
				  </Border.Background>
				</Border>
				<ContentPresenter Margin="5,1" TextBlock.Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto" Grid.RowSpan="2"/>
				<Border HorizontalAlignment="Stretch" Margin="0,0,0,0" x:Name="shine" Width="Auto" CornerRadius="4,4,0,0">
				  <Border.Background>
					<LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
					  <GradientStop Color="#66FFFFFF" Offset="0"/>
					  <GradientStop Color="#11FFFFFF" Offset="1"/>
					</LinearGradientBrush>
				  </Border.Background>
				</Border>
			  </Grid>
			</Border>
		  </Border>
		  <ControlTemplate.Resources>
			<Storyboard x:Key="Timeline1">
			  <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
				<SplineDoubleKeyFrame KeyTime="00:00:00.0500000" Value="1"/>
			  </DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard x:Key="Timeline2">
			  <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
				<SplineDoubleKeyFrame KeyTime="00:00:00.0500000" Value="0"/>
			  </DoubleAnimationUsingKeyFrames>
			</Storyboard>
		  </ControlTemplate.Resources>
		  <ControlTemplate.Triggers>
			<Trigger Property="IsPressed" Value="True">
			  <Setter Property="Opacity" TargetName="shine" Value="0.4"/>
			  <Setter Property="Background" TargetName="border" Value="#CC000000"/>
			  <Setter Property="Visibility" TargetName="glow" Value="Hidden"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
			  <Trigger.EnterActions>
				<BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
			  </Trigger.EnterActions>
			  <Trigger.ExitActions>
				<BeginStoryboard x:Name="Timeline2_BeginStoryboard" Storyboard="{StaticResource Timeline2}"/>
			  </Trigger.ExitActions>
			</Trigger>
		  </ControlTemplate.Triggers>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>


  <Style x:Key="MiniButton" TargetType="{x:Type Button}">
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type Button}">
		  <Border BorderBrush="#7f666666" BorderThickness="1" CornerRadius="2" Margin="0">
			<Border x:Name="border" Background="#7F222222" BorderBrush="#FF000000" BorderThickness="1" CornerRadius="1">
			  <Grid>
				<Grid.RowDefinitions>
				  <RowDefinition Height="0.507*"/>
				  <RowDefinition Height="0.493*"/>
				</Grid.RowDefinitions>
				<Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="2">
				  <Border.Background>
					<RadialGradientBrush>
					  <RadialGradientBrush.RelativeTransform>
						<TransformGroup>
						  <ScaleTransform ScaleX="1.702" ScaleY="2.243"/>
						  <TranslateTransform X="-0.368" Y="-0.152"/>
						</TransformGroup>
					  </RadialGradientBrush.RelativeTransform>
					  <GradientStop Color="#B28DBDFF" Offset="0"/>
					  <GradientStop Color="#008DBDFF" Offset="1"/>
					</RadialGradientBrush>
				  </Border.Background>
				</Border>
				<ContentPresenter Margin="2,0"
									  TextBlock.Foreground="White"
									  TextBlock.FontSize="11"
									  HorizontalAlignment="Center"
									  VerticalAlignment="Center"
									  Width="Auto"
									  Grid.RowSpan="2"/>
				<Border HorizontalAlignment="Stretch" Margin="0" x:Name="shine" Width="Auto" CornerRadius="1,1,0,0">
				  <Border.Background>
					<LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
					  <GradientStop Color="#66FFFFFF" Offset="0"/>
					  <GradientStop Color="#11FFFFFF" Offset="1"/>
					</LinearGradientBrush>
				  </Border.Background>
				</Border>
			  </Grid>
			</Border>
		  </Border>
		  <ControlTemplate.Resources>
			<Storyboard x:Key="Timeline1">
			  <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
				<SplineDoubleKeyFrame KeyTime="00:00:00.0500000" Value="1"/>
			  </DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard x:Key="Timeline2">
			  <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
				<SplineDoubleKeyFrame KeyTime="00:00:00.0500000" Value="0"/>
			  </DoubleAnimationUsingKeyFrames>
			</Storyboard>
		  </ControlTemplate.Resources>
		  <ControlTemplate.Triggers>
			<Trigger Property="IsPressed" Value="True">
			  <Setter Property="Opacity" TargetName="shine" Value="0.4"/>
			  <Setter Property="Background" TargetName="border" Value="#CC000000"/>
			  <Setter Property="Visibility" TargetName="glow" Value="Hidden"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
			  <Trigger.EnterActions>
				<BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
			  </Trigger.EnterActions>
			  <Trigger.ExitActions>
				<BeginStoryboard x:Name="Timeline2_BeginStoryboard" Storyboard="{StaticResource Timeline2}"/>
			  </Trigger.ExitActions>
			</Trigger>
		  </ControlTemplate.Triggers>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>

  <!--
	**************************
	* STYLE: Expander
	**************************
	-->
  <ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
	<Border
		Name="Border"
		CornerRadius="2,0,0,0"
		Background="Transparent"
		BorderBrush="#404040"
		BorderThickness="0,0,1,0">
	  <Path
			Name="Arrow"
			Fill="White"
			HorizontalAlignment="Center"
			VerticalAlignment="Center"
			Data="M 0 0 L 4 4 L 8 0 Z"/>
	</Border>
	<ControlTemplate.Triggers>
	  <Trigger Property="ToggleButton.IsMouseOver" Value="true">
		<Setter TargetName="Border" Property="Background" Value="#808080" />
	  </Trigger>
	  <Trigger Property="IsPressed" Value="true">
		<Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
	  </Trigger>
	  <Trigger Property="IsChecked" Value="true">
		<Setter TargetName="Arrow" Property="Data" Value="M 0 4 L 4 0 L 8 4 Z" />
	  </Trigger>
	  <Trigger Property="IsEnabled" Value="False">
		<Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
		<Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
		<Setter Property="Foreground" Value="#888888"/>
		<Setter TargetName="Arrow" Property="Fill" Value="#888888" />
	  </Trigger>
	</ControlTemplate.Triggers>
  </ControlTemplate>


  <Style x:Key="ExpanderHeading" TargetType="{x:Type TextBlock}">
	<Setter Property="FontWeight" Value="Bold"/>
	<Setter Property="Foreground" Value="White"/>
  </Style>



  <Style TargetType="{x:Type Expander}">
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type Expander}">
		  <Grid>
			<Grid.RowDefinitions>
			  <RowDefinition Height="Auto"/>
			  <RowDefinition Name="ContentRow" Height="0"/>
			</Grid.RowDefinitions>
			<Border
				Name="Border"
				Grid.Row="0"
				Background="{StaticResource HeaderGradientBrush}"
				BorderBrush="#404040"
				BorderThickness="1"
				CornerRadius="3,3,0,0">
			  <Grid>
				<Grid.ColumnDefinitions>
				  <ColumnDefinition Width="20" />
				  <ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<ToggleButton
					IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
					OverridesDefaultStyle="True"
					Template="{StaticResource ExpanderToggleButton}"
					Background="#C0C0C0" />
				<ContentPresenter
				   TextElement.Foreground="White"
				   TextElement.FontWeight="Bold"
					Grid.Column="1"
					Margin="4"
					ContentSource="Header"
					RecognizesAccessKey="True" />
			  </Grid>
			</Border>
			<Border
					Name="Content"
					Grid.Row="1"
					Background="{StaticResource LightGrayGradientBrush}"
					TextElement.Foreground="Black"
					BorderBrush="#404040"
					BorderThickness="1,0,1,1"
					CornerRadius="0,0,3,3" >
			  <ContentPresenter Margin="0" />
			</Border>
		  </Grid>
		  <ControlTemplate.Triggers>
			<Trigger Property="IsExpanded" Value="True">
			  <Setter TargetName="ContentRow" Property="Height" Value="{Binding ElementName=Content,Path=DesiredHeight}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
			  <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
			  <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
			  <Setter Property="Foreground" Value="#888888"/>
			</Trigger>

		  </ControlTemplate.Triggers>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>

  <Style x:Key="ExpanderDark" TargetType="{x:Type Expander}">
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type Expander}">
		  <Grid>
			<Grid.RowDefinitions>
			  <RowDefinition Height="Auto"/>
			  <RowDefinition Name="ContentRow" Height="0"/>
			</Grid.RowDefinitions>
			<Border
				Name="Border"
				Grid.Row="0"
				Background="{StaticResource HeaderGradientBrush}"
				BorderBrush="#404040"
				BorderThickness="1"
				CornerRadius="3,3,0,0">
			  <Grid>
				<Grid.ColumnDefinitions>
				  <ColumnDefinition Width="20" />
				  <ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<ToggleButton
					IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
					OverridesDefaultStyle="True"
					Template="{StaticResource ExpanderToggleButton}"
					Background="#C0C0C0" />
				<ContentPresenter
				   TextElement.Foreground="White"
				   TextElement.FontWeight="Bold"
					Grid.Column="1"
					Margin="4"
					ContentSource="Header"
					RecognizesAccessKey="True" />
			  </Grid>
			</Border>
			<Border
					Name="Content"
					Grid.Row="1"
					Background="{StaticResource ControlBackgroundBrush}"
					TextElement.Foreground="White"
					BorderBrush="#404040"
					BorderThickness="1,0,1,1"
					CornerRadius="0,0,3,3" >
			  <ContentPresenter Margin="0" />
			</Border>
		  </Grid>
		  <ControlTemplate.Triggers>
			<Trigger Property="IsExpanded" Value="True">
			  <Setter TargetName="ContentRow" Property="Height" Value="{Binding ElementName=Content,Path=DesiredHeight}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
			  <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
			  <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
			  <Setter Property="Foreground" Value="#888888"/>
			</Trigger>

		  </ControlTemplate.Triggers>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>




  <!--
	**************************
	* STYLE: ListBox
	**************************
	-->
  <Style TargetType="{x:Type ListBox}">
	<Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
	<Setter Property="Background" Value="#00000000"/>
	<Setter Property="Margin" Value="0,1"/>
	<Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>

  </Style>
  <Style TargetType="{x:Type ListBoxItem}">
	<Setter Property="SnapsToDevicePixels" Value="true"/>
	<Setter Property="OverridesDefaultStyle" Value="true"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type ListBoxItem}">
		  <Border Name="Border" Padding="2" Margin="2" CornerRadius="2" BorderThickness="2" SnapsToDevicePixels="true">
			<ContentPresenter />
		  </Border>
		  <ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="false">
			  <Setter Property="Foreground" Value="#888888"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="true">
			  <Setter TargetName="Border" Property="Background" Value="#209CD815"/>
			  <Setter TargetName="Border" Property="BorderBrush" Value="#9CD815"/>
			</Trigger>
			<Trigger Property="IsSelected" Value="true">
			  <Setter TargetName="Border" Property="Background" Value="#600072bc"/>
			  <Setter TargetName="Border" Property="BorderBrush" Value="#0072bc"/>
			</Trigger>
		  </ControlTemplate.Triggers>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>



  <!--
	********************************
	* STYLE: DataGrid (WPFToolkit)
	********************************
	-->
  <SolidColorBrush x:Key="GridBackground" Color="Transparent"/>
  <SolidColorBrush x:Key="GridRowBackground" Color="#444"/>
  <SolidColorBrush x:Key="GridAlternatingRowBackground" Color="#666"/>


  <!-- DataGridColumnHeader Right Gripper Style -->
  <Style x:Key="ColumnHeaderRightGripperStyle" TargetType="{x:Type Thumb}">
	<Setter Property="Width" Value="8"/>
	<Setter Property="Background" Value="Transparent"/>
	<Setter Property="Cursor" Value="SizeWE"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type Thumb}">
		  <Border Padding="{TemplateBinding Padding}"
			  Background="{TemplateBinding Background}">
		  </Border>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>

  <!-- DataGridColumnHeader Left Gripper Style -->
  <Style x:Key="ColumnHeaderLeftGripperStyle"
			  BasedOn="{StaticResource ColumnHeaderRightGripperStyle}"
			  TargetType="{x:Type Thumb}">
	<Setter Property="Width" Value="8"/>
	<Setter Property="Background" Value="Transparent"/>
	<Setter Property="Cursor" Value="SizeWE"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type Thumb}">
		  <Border Name="Border"
			  Padding="{TemplateBinding Padding}"
			  Background="{TemplateBinding Background}">
			<Canvas>
			  <Line RenderOptions.EdgeMode="Aliased" Stroke="{StaticResource ControlBorderBrush}"
				X1="7" Y1="{Binding ElementName=Border, Path=ActualHeight}"
				X2="7" Y2="0"/>
			</Canvas>
		  </Border>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>

  <!-- DataGridColumnHeader style -->
  <Style x:Key="ColumnHeaderStyle" TargetType="{x:Type Primitives:DataGridColumnHeader}">
	<Setter Property="VerticalContentAlignment" Value="Center" />
	<Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
	<Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
	<Setter Property="BorderThickness" Value="0,1,0,1" />
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type Primitives:DataGridColumnHeader}">
		  <Grid>
			<WpfToolkit:DataGridHeaderBorder
			  x:Name="headerBorder"
				SortDirection="{TemplateBinding SortDirection}"
				IsHovered="{TemplateBinding IsMouseOver}"
				IsPressed="{TemplateBinding IsPressed}"
				IsClickable="{TemplateBinding CanUserSort}"
				Background="Black"
				BorderThickness="0"
				BorderBrush="Yellow"
				Padding ="{TemplateBinding Padding}"
				SeparatorVisibility="Collapsed">

			  <Grid>
				<Grid.RowDefinitions>
				  <RowDefinition Height="0.507*"/>
				  <RowDefinition Height="0.493*"/>
				</Grid.RowDefinitions>

				<Border Opacity="1.0"
						HorizontalAlignment="Stretch"
						x:Name="glow"
						Width="Auto"
						Grid.RowSpan="2"
						CornerRadius="0">
				  <Border.Background>
					<RadialGradientBrush>
					  <RadialGradientBrush.RelativeTransform>
						<TransformGroup>
						  <ScaleTransform ScaleX="1.702" ScaleY="2.243"/>
						  <TranslateTransform X="-0.368" Y="-0.152"/>
						</TransformGroup>
					  </RadialGradientBrush.RelativeTransform>
					  <GradientStop Color="#B28DBDFF" Offset="0"/>
					  <GradientStop Color="#008DBDFF" Offset="1"/>
					</RadialGradientBrush>
				  </Border.Background>
				</Border>

				<TextBlock
					Text="{Binding}"
					Margin="4,0,4,0"
					Grid.RowSpan="2"
					SnapsToDevicePixels="True"
					VerticalAlignment="Center"
					HorizontalAlignment="Center" />

				<Border HorizontalAlignment="Stretch"
					Margin="0,0,0,0"
					x:Name="shine"
					Width="Auto"
					CornerRadius="0">
				  <Border.Background>
					<LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
					  <GradientStop Color="#66FFFFFF" Offset="0"/>
					  <GradientStop Color="#11FFFFFF" Offset="1"/>
					</LinearGradientBrush>
				  </Border.Background>
				</Border>
			  </Grid>

			</WpfToolkit:DataGridHeaderBorder>

			<Thumb x:Name="PART_LeftHeaderGripper"
			   HorizontalAlignment="Left"
			   Style="{StaticResource ColumnHeaderRightGripperStyle}"/>
			<Thumb x:Name="PART_RightHeaderGripper"
			   HorizontalAlignment="Right"
			   Style="{StaticResource ColumnHeaderLeftGripperStyle}"/>
		  </Grid>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>

  <!-- DataGrid Style -->
  <Style x:Key="{x:Type WpfToolkit:DataGrid}" TargetType="{x:Type WpfToolkit:DataGrid}">
	<Setter Property="Background" Value="{StaticResource GridBackground}"/>
	<Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
	<Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
	<Setter Property="HorizontalGridLinesBrush" Value="{StaticResource ControlBorderBrush}" />
	<Setter Property="VerticalGridLinesBrush" Value="{StaticResource ControlBorderBrush}" />
	<Setter Property="RowBackground" Value="{StaticResource GridRowBackground}" />
	<Setter Property="AlternatingRowBackground" Value="{StaticResource GridAlternatingRowBackground}" />
	<Setter Property="ColumnHeaderStyle" Value="{StaticResource ColumnHeaderStyle}"/>
	<Setter Property="FontFamily" Value="Calibri" />
	<Setter Property="FontSize" Value="13" />
	<Setter Property="BorderThickness" Value="1" />
	<!-- This is needed to force DG to have a non-default value.  Otherwise the DGR.DetailsVisibility cannot have a value of VisibleWhenSelected by default. -->
	<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
	<Setter Property="SnapsToDevicePixels" Value="True" />


	<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type WpfToolkit:DataGrid}">
		  <Border
			  Background="{TemplateBinding Background}"
			  BorderBrush="{TemplateBinding BorderBrush}"
			  BorderThickness="{TemplateBinding BorderThickness}"
			  SnapsToDevicePixels="True"
			  Padding="{TemplateBinding Padding}">
			<ScrollViewer Focusable="false" Name="DG_ScrollViewer">
			  <ScrollViewer.Template>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
				  <Grid>
					<Grid.RowDefinitions>
					  <RowDefinition Height="Auto"/>
					  <RowDefinition Height="*"/>
					  <RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>

					<Grid.ColumnDefinitions>
					  <ColumnDefinition Width="Auto"/>
					  <ColumnDefinition Width="*"/>
					  <ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>

					<!--Left Column Header Corner -->
					<Button
						Command="{x:Static WpfToolkit:DataGrid.SelectAllCommand}"
						Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type WpfToolkit:DataGrid}}, Path=CellsPanelHorizontalOffset}"
						Focusable="false"></Button>
					<!--Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type WpfToolkit:DataGrid}}, Path=HeadersVisibility, Converter={x:Static WpfToolkit:DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static WpfToolkit:DataGridHeadersVisibility.All}}" />-->
					<!--Column Headers-->
					<Primitives:DataGridColumnHeadersPresenter
						Grid.Column="1"
						Name="PART_ColumnHeadersPresenter"></Primitives:DataGridColumnHeadersPresenter>
					<!--Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type WpfToolkit:DataGrid}}, Path=HeadersVisibility, Converter={x:Static WpfToolkit:DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static WpfToolkit:DataGridHeadersVisibility.Column}}"/>-->

					<!--DataGrid content-->
					<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="1" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}" />

					<ScrollBar
						Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" Name="PART_VerticalScrollBar"
						Orientation="Vertical"
						Maximum="{TemplateBinding ScrollableHeight}"
						ViewportSize="{TemplateBinding ViewportHeight}"
						Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
						Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

					<Grid Grid.Row="2" Grid.Column="1">
					  <Grid.ColumnDefinitions>
						<ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type WpfToolkit:DataGrid}}, Path=NonFrozenColumnsViewportHorizontalOffset}"/>
						<ColumnDefinition Width="*"/>
					  </Grid.ColumnDefinitions>
					  <ScrollBar
						  Grid.Column="1"
						  Name="PART_HorizontalScrollBar"
						  Orientation="Horizontal"
						  Maximum="{TemplateBinding ScrollableWidth}"
						  ViewportSize="{TemplateBinding ViewportWidth}"
						  Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
						  Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
					</Grid>
				  </Grid>
				</ControlTemplate>
			  </ScrollViewer.Template>
			  <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
			</ScrollViewer>
		  </Border>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
	<Style.Triggers>
	  <Trigger Property="IsGrouping" Value="true">
		<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
	  </Trigger>
	</Style.Triggers>
  </Style>




  <!--
	**************************
	* STYLE: ComboBox
	**************************
	-->
  <SolidColorBrush x:Key="ComboBoxBackground" Color="Transparent"/>
  <SolidColorBrush x:Key="ComboBoxBorder" Color="#777"/>
  <SolidColorBrush x:Key="ComboBoxArrow" Color="#AAFFFFFF"/>
  <SolidColorBrush x:Key="ComboBoxHighlight" Color="#22ffffff"/>
  <SolidColorBrush x:Key="ComboBoxActive" Color="#22eeeeff"/>
  <SolidColorBrush x:Key="ComboBoxItemBackground" Color="#E6444444"/>
  <SolidColorBrush x:Key="ComboBoxItemBorder" Color="#E6FFFFFF"/>
  <SolidColorBrush x:Key="ComboBoxItemHighlight" Color="#E6666666"/>
  <SolidColorBrush x:Key="ComboBoxItemHighlightBorder" Color="#E6FFFFFF"/>
  <SolidColorBrush x:Key="ComboBoxDisabledText" Color="#AA888888"/>


  <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
	<Grid>
	  <Grid.ColumnDefinitions>
		<ColumnDefinition />
		<ColumnDefinition Width="20" />
	  </Grid.ColumnDefinitions>
	  <Border
		x:Name="Border"
		Grid.ColumnSpan="2"
		CornerRadius="2"
		Background="{StaticResource ComboBoxBackground}"
		BorderThickness="1"
		BorderBrush="{StaticResource ComboBoxBorder}"/>
	  <Border
		Grid.Column="0"
		CornerRadius="2,0,0,2"
		Margin="1"
		BorderBrush="{StaticResource ComboBoxBorder}"
		BorderThickness="0,0,1,0" />
	  <Path
		x:Name="Arrow"
		Grid.Column="1"
		Fill="{StaticResource ComboBoxArrow}"
		HorizontalAlignment="Center"
		VerticalAlignment="Center"
		Data="M 0 0 L 4 4 L 8 0 Z"/>
	</Grid>
	<ControlTemplate.Triggers>
	  <Trigger Property="ToggleButton.IsMouseOver" Value="true">
		<Setter TargetName="Border" Property="Background" Value="{StaticResource ComboBoxHighlight}" />
	  </Trigger>
	  <Trigger Property="ToggleButton.IsChecked" Value="true">
		<Setter TargetName="Border" Property="Background" Value="{StaticResource ComboBoxActive}" />
	  </Trigger>
	  <Trigger Property="IsEnabled" Value="False">
		<Setter TargetName="Border" Property="Background" Value="Maroon" />
		<Setter Property="Foreground" Value="{StaticResource ComboBoxDisabledText}"/>
		<Setter TargetName="Arrow" Property="Fill" Value="Yellow" />
	  </Trigger>
	</ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
	<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
  </ControlTemplate>

  <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
	<Setter Property="SnapsToDevicePixels" Value="true"/>
	<Setter Property="OverridesDefaultStyle" Value="true"/>
	<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
	<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
	<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
	<Setter Property="Background" Value="Pink"/>
	<Setter Property="BorderBrush" Value="Yellow"/>
	<Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
	<Setter Property="MinWidth" Value="120"/>
	<Setter Property="MinHeight" Value="20"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type ComboBox}">
		  <Grid TextElement.Foreground="{StaticResource TextBrush}">
			<ToggleButton
				Name="ToggleButton"
				Template="{StaticResource ComboBoxToggleButton}"
				Grid.Column="2"
				Focusable="false"
				IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
				ClickMode="Press">
			</ToggleButton>
			<ContentPresenter
				Name="ContentSite"
				IsHitTestVisible="False"
				Content="{TemplateBinding SelectionBoxItem}"
				ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
				ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
				Margin="3,3,23,3"
				VerticalAlignment="Center"
				HorizontalAlignment="Left"/>
			<TextBox x:Name="PART_EditableTextBox"
				Style="{x:Null}"
				Template="{StaticResource ComboBoxTextBox}"
				HorizontalAlignment="Left"
				VerticalAlignment="Center"
				Margin="3,3,23,3"
				Focusable="True"
				Background="Transparent"
				Visibility="Hidden"
				IsReadOnly="{TemplateBinding IsReadOnly}"/>
			<Popup
				Name="Popup"
				Placement="Bottom"
				IsOpen="{TemplateBinding IsDropDownOpen}"
				AllowsTransparency="True"
				Focusable="False"
				PopupAnimation="Slide">
			  <Grid
				Name="DropDown"
				SnapsToDevicePixels="True"
				MinWidth="{TemplateBinding ActualWidth}"
				MaxHeight="{TemplateBinding MaxDropDownHeight}">
				<Border
				x:Name="DropDownBorder"
				Background="{StaticResource ComboBoxItemBackground}"
				BorderThickness="1"
				BorderBrush="{StaticResource ComboBoxItemBorder}"/>
				<ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
				  <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
				</ScrollViewer>
			  </Grid>
			</Popup>
		  </Grid>
		  <ControlTemplate.Triggers>
			<Trigger Property="HasItems" Value="false">
			  <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
			  <Setter Property="Foreground" Value="#888888"/>
			</Trigger>
			<Trigger Property="IsGrouping" Value="true">
			  <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
			</Trigger>
			<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
			  <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
			  <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
			</Trigger>
			<Trigger Property="IsEditable" Value="true">
			  <Setter Property="IsTabStop" Value="false"/>
			  <Setter TargetName="PART_EditableTextBox" Property="Visibility"	Value="Visible"/>
			  <Setter TargetName="PART_EditableTextBox" Property="Foreground"	Value="White"/>
			  <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
			</Trigger>
		  </ControlTemplate.Triggers>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
	<Style.Triggers>
	</Style.Triggers>
  </Style>

  <!-- SimpleStyles: ComboBoxItem -->
  <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
	<Setter Property="SnapsToDevicePixels" Value="true"/>
	<Setter Property="OverridesDefaultStyle" Value="true"/>
	<Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
	<Setter Property="Background" Value="{StaticResource ComboBoxBackground}" />
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type ComboBoxItem}">
		  <Border
			Name="Border"
			Padding="2"
			BorderThickness="1"
			SnapsToDevicePixels="true">
			<ContentPresenter />
		  </Border>
		  <ControlTemplate.Triggers>
			<Trigger Property="IsHighlighted" Value="true">
			  <Setter TargetName="Border" Property="Background" Value="{StaticResource ComboBoxItemHighlight}"/>
			  <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ComboBoxItemHighlightBorder}"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
			  <Setter Property="Foreground" Value="#888888"/>
			</Trigger>
		  </ControlTemplate.Triggers>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>



  <Style x:Key="ReportHeader" TargetType="{x:Type Border}">
	<Setter Property="BorderBrush" Value="#404040"/>
	<Setter Property="Background" Value="{StaticResource HeaderGradientBrush}"/>
	<Setter Property="BorderThickness" Value="1"/>
	<Setter Property="CornerRadius" Value="3,3,0,0"/>
	<Setter Property="Height" Value="26"/>
  </Style>




  <!--
	**************************
	* STYLE: TreeView
	**************************
	-->
  <Style x:Key="{x:Type TreeView}" TargetType="{x:Type TreeView}">
	<Setter Property="OverridesDefaultStyle" Value="True" />
	<Setter Property="SnapsToDevicePixels" Value="True" />
	<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
	<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type TreeView}">
		  <Border
Name="Border"
CornerRadius="1"
Background="{StaticResource ControlBackgroundBrush}"
BorderBrush="#888888"
BorderThickness="1" >
			<ScrollViewer
Focusable="False"
CanContentScroll="False"
Padding="4">
			  <ItemsPresenter/>
			</ScrollViewer>
		  </Border>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>

  <!-- SimpleStyles: TreeViewItem -->

  <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
	<Setter Property="Focusable" Value="False"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type ToggleButton}">
		  <Grid
Width="15"
Height="13"
Background="Transparent">
			<Path x:Name="ExpandPath"
HorizontalAlignment="Left"
VerticalAlignment="Center"
Margin="1,1,1,1"
Fill="#cccccc"
Data="M 4 0 L 8 4 L 4 8 Z"/>
		  </Grid>
		  <ControlTemplate.Triggers>
			<Trigger Property="IsChecked"
   Value="True">
			  <Setter Property="Data"
  TargetName="ExpandPath"
  Value="M 0 4 L 8 4 L 4 8 Z"/>
			</Trigger>
		  </ControlTemplate.Triggers>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>
  <Style TargetType="{x:Type TreeViewItem}">
	<Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
	<Setter Property="Template">
	  <Setter.Value>
		<ControlTemplate TargetType="{x:Type TreeViewItem}">
		  <Grid>
			<Grid.ColumnDefinitions>
			  <ColumnDefinition MinWidth="19" Width="Auto"/>
			  <ColumnDefinition Width="Auto"/>
			  <ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
			  <RowDefinition Height="Auto"/>
			  <RowDefinition/>
			</Grid.RowDefinitions>
			<ToggleButton
x:Name="Expander"
Style="{StaticResource ExpandCollapseToggleStyle}"
IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
ClickMode="Press"/>
			<Border
Name="Border"
BorderThickness="1"
CornerRadius="4"
Grid.Column="1"
Padding="2"
Margin="2">
			  <ContentPresenter
x:Name="PART_Header"
ContentSource="Header"
HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
			</Border>
			<ItemsPresenter
x:Name="ItemsHost"
Grid.Row="1"
Grid.Column="1"
Grid.ColumnSpan="2"/>
		  </Grid>
		  <ControlTemplate.Triggers>
			<Trigger Property="IsExpanded" Value="false">
			  <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="HasItems" Value="false">
			  <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>

			</Trigger>
			<Trigger Property="HasItems" Value="true">
			  <Setter Property="Focusable" Value="false" />
			  <Setter TargetName="Border" Property="Background" Value="Transparent"/>
			  <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="true">
			  <Setter TargetName="Border" Property="Background" Value="#609CD815"/>
			  <Setter TargetName="Border" Property="BorderBrush" Value="#9CD815"/>
			</Trigger>
			<Trigger Property="IsSelected" Value="true">
			  <Setter TargetName="Border" Property="Background" Value="#600072bc"/>
			  <Setter TargetName="Border" Property="BorderBrush" Value="#0072bc"/>
			</Trigger>
		  </ControlTemplate.Triggers>
		</ControlTemplate>
	  </Setter.Value>
	</Setter>
  </Style>
</ResourceDictionary>